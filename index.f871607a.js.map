{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-f19879743a317cd4.js","node_modules/@parcel/runtime-js/lib/runtime-468af8db03c991c5.js","node_modules/@parcel/runtime-js/lib/runtime-99ff45b8cb465357.js","node_modules/lego-boost-browser/src/boostConnector.ts","node_modules/lego-boost-browser/src/helpers/eventEmitter.ts","node_modules/lego-boost-browser/src/helpers/buffer.ts","node_modules/lego-boost-browser/src/hub/hub.ts","node_modules/lego-boost-browser/src/hub/hubAsync.ts","node_modules/lego-boost-browser/src/ai/states/manual.ts","node_modules/lego-boost-browser/src/ai/states/ai.ts","node_modules/lego-boost-browser/src/ai/hub-control.ts","node_modules/lego-boost-browser/src/legoBoost.ts","js/main.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"THCxY\"))).then(() => parcelRequire('gu1oi'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"jIpET\"))).then(() => parcelRequire('heZOG'));","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aKZLx\\\":\\\"index.f871607a.js\\\",\\\"THCxY\\\":\\\"base64-js.063e6c47.js\\\",\\\"jIpET\\\":\\\"ieee754.7eb12613.js\\\"}\"));","const BOOST_HUB_SERVICE_UUID = '00001623-1212-efde-1623-785feabcd123';\nconst BOOST_CHARACTERISTIC_UUID = '00001624-1212-efde-1623-785feabcd123';\n\nexport class BoostConnector {\n  private static device: BluetoothDevice;\n\n  public static isWebBluetoothSupported : boolean =  navigator.bluetooth ? true : false;\n  \n  public static async connect(disconnectCallback: () => Promise<void>): Promise<BluetoothRemoteGATTCharacteristic> {\n    const options = {\n      acceptAllDevices: false,\n      filters: [{ services: [BOOST_HUB_SERVICE_UUID] }],\n      optionalServices: [BOOST_HUB_SERVICE_UUID],\n    };\n\n    this.device = await navigator.bluetooth.requestDevice(options);\n\n    this.device.addEventListener('gattserverdisconnected', async event => {\n      await disconnectCallback();\n    });\n\n    // await this.device.watchAdvertisements();\n\n    // this.device.addEventListener('advertisementreceived', event => {\n    //   // @ts-ignore\n    //   console.log(event.rssi);\n    // });\n\n    return BoostConnector.getCharacteristic(this.device);\n  }\n\n  private static async getCharacteristic(device: BluetoothDevice): Promise<BluetoothRemoteGATTCharacteristic> {\n    const server = await device.gatt.connect();\n    const service = await server.getPrimaryService(BOOST_HUB_SERVICE_UUID);\n    return await service.getCharacteristic(BOOST_CHARACTERISTIC_UUID);\n  }\n\n  public static async reconnect(): Promise<[boolean, BluetoothRemoteGATTCharacteristic]> {\n    if (this.device) {\n      const bluetooth = await BoostConnector.getCharacteristic(this.device);\n      return [true, bluetooth];\n    }\n    return [false, null];\n  }\n\n  public static disconnect(): boolean {\n    if (this.device) {\n      this.device.gatt.disconnect();\n      return true;\n    }\n    return false;\n  }\n}\n","// https://gist.github.com/mudge/5830382#gistcomment-2658721\n\ntype Listener = (...args: any[]) => void;\ninterface IEvents {\n  [event: string]: Listener[];\n}\n\nexport class EventEmitter<T extends string> {\n  private readonly events: IEvents = {};\n\n  public on(event: string, listener: Listener): () => void {\n    if (typeof this.events[event] !== 'object') {\n      this.events[event] = [];\n    }\n\n    this.events[event].push(listener);\n    return () => this.removeListener(event, listener);\n  }\n\n  public removeListener(event: string, listener: Listener): void {\n    if (typeof this.events[event] !== 'object') {\n      return;\n    }\n\n    const idx: number = this.events[event].indexOf(listener);\n    if (idx > -1) {\n      this.events[event].splice(idx, 1);\n    }\n  }\n\n  public removeAllListeners(): void {\n    Object.keys(this.events).forEach((event: string) => this.events[event].splice(0, this.events[event].length));\n  }\n\n  public emit(event: string, ...args: any[]): void {\n    if (typeof this.events[event] !== 'object') {\n      return;\n    }\n\n    [...this.events[event]].forEach(listener => listener.apply(this, args));\n  }\n\n  public once(event: string, listener: Listener): () => void {\n    const remove: () => void = this.on(event, (...args: any[]) => {\n      remove();\n      listener.apply(this, args);\n    });\n\n    return remove;\n  }\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = import('base64-js')\nvar ieee754 = import('ieee754')\n\nconst INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nconst kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    // @ts-ignore\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    // @ts-ignore\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  // @ts-ignore\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      // @ts-ignore\n      ? createBuffer(size).fill(fill, encoding) \n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  // @ts-ignore\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n// @ts-ignore\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    // @ts-ignore\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      // @ts-ignore\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        // @ts-ignore\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          // @ts-ignore\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    // @ts-ignore\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    // @ts-ignore\n    return base64.fromByteArray(buf)\n  } else {\n    // @ts-ignore\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  // @ts-ignore\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  // @ts-ignore\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  // @ts-ignore\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  // @ts-ignore\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  // @ts-ignore\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  // @ts-ignore\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      // @ts-ignore\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  // @ts-ignore\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\nexport { Buffer, SlowBuffer, INSPECT_MAX_BYTES, kMaxLength }","import { EventEmitter } from '../helpers/eventEmitter';\nimport { Buffer } from '../helpers/buffer';\nimport { RawData } from '../types';\n\ntype Device = 'LED' | 'DISTANCE' | 'IMOTOR' | 'MOTOR' | 'TILT';\n\ntype Port = 'A' | 'B' | 'C' | 'D' | 'AB' | 'LED' | 'TILT';\n\ntype LedColor =\n  | 'off'\n  | 'pink'\n  | 'purple'\n  | 'blue'\n  | 'lightblue'\n  | 'cyan'\n  | 'green'\n  | 'yellow'\n  | 'orange'\n  | 'red'\n  | 'white';\n\nexport class Hub {\n  emitter: EventEmitter<any> = new EventEmitter<any>();\n  bluetooth: BluetoothRemoteGATTCharacteristic;\n\n  log: (message?: any, ...optionalParams: any[]) => void;\n  logDebug: (message?: any, ...optionalParams: any[]) => void;\n\n  autoSubscribe: boolean = true;\n  ports: { [key: string]: any };\n  num2type: { [key: number]: Device };\n  port2num: { [key in Port]: number };\n  num2port: { [key: number]: string };\n  num2action: { [key: number]: string };\n  num2color: { [key: number]: string };\n  ledColors: LedColor[];\n  portInfoTimeout: number;\n  noReconnect: boolean;\n  connected: boolean;\n  rssi: number;\n  reconnect: boolean;\n\n  writeCue: any = [];\n  isWriting: boolean = false;\n\n  private emit(type: string, data: any = null) {\n    this.emitter.emit(type, data);\n  }\n\n  constructor(bluetooth: BluetoothRemoteGATTCharacteristic) {\n    this.bluetooth = bluetooth;\n    this.log = console.log;\n    this.autoSubscribe = true;\n    this.ports = {};\n    this.num2type = {\n      23: 'LED',\n      37: 'DISTANCE',\n      38: 'IMOTOR',\n      39: 'MOTOR',\n      40: 'TILT',\n    };\n    this.port2num = {\n      A: 0x00,\n      B: 0x01,\n      C: 0x02,\n      D: 0x03,\n      AB: 0x10,\n      LED: 0x32,\n      TILT: 0x3a,\n    };\n    this.num2port = Object.entries(this.port2num).reduce((acc, [port, portNum]) => {\n      acc[portNum] = port;\n      return acc;\n    }, {});\n    this.num2action = {\n      1: 'start',\n      5: 'conflict',\n      10: 'stop',\n    };\n    this.num2color = {\n      0: 'black',\n      3: 'blue',\n      5: 'green',\n      7: 'yellow',\n      9: 'red',\n      10: 'white',\n    };\n    this.ledColors = [\n      'off',\n      'pink',\n      'purple',\n      'blue',\n      'lightblue',\n      'cyan',\n      'green',\n      'yellow',\n      'orange',\n      'red',\n      'white',\n    ];\n\n    this.addListeners();\n  }\n\n  private addListeners() {\n    this.bluetooth.addEventListener('characteristicvaluechanged', event => {\n      // https://googlechrome.github.io/samples/web-bluetooth/read-characteristic-value-changed.html\n      // @ts-ignore\n      const data = Buffer.from(event.target.value.buffer);\n      this.parseMessage(data);\n    });\n\n    setTimeout(() => {\n      // Without timout missed first characteristicvaluechanged events\n      this.bluetooth.startNotifications();\n    }, 1000);\n  }\n\n  private parseMessage(data: any) {\n    switch (data[2]) {\n      case 0x04: {\n        clearTimeout(this.portInfoTimeout);\n        this.portInfoTimeout = setTimeout(() => {\n          /**\n           * Fires when a connection to the Move Hub is established\n           * @event Hub#connect\n           */\n          if (this.autoSubscribe) {\n            this.subscribeAll();\n          }\n\n          if (!this.connected) {\n            this.connected = true;\n            this.emit('connect');\n          }\n        }, 1000);\n\n        this.log('Found: ' + this.num2type[data[5]]);\n        this.logDebug('Found', data);\n\n        if (data[4] === 0x01) {\n          this.ports[data[3]] = {\n            type: 'port',\n            deviceType: this.num2type[data[5]],\n            deviceTypeNum: data[5],\n          };\n        } else if (data[4] === 0x02) {\n          this.ports[data[3]] = {\n            type: 'group',\n            deviceType: this.num2type[data[5]],\n            deviceTypeNum: data[5],\n            members: [data[7], data[8]],\n          };\n        }\n        break;\n      }\n      case 0x05: {\n        this.log('Malformed message');\n        this.log('<', data);\n        break;\n      }\n      case 0x45: {\n        this.parseSensor(data);\n        break;\n      }\n      case 0x47: {\n        // 0x47 subscription acknowledgements\n        // https://github.com/JorgePe/BOOSTreveng/blob/master/Notifications.md\n        break;\n      }\n      case 0x82: {\n        /**\n         * Fires on port changes\n         * @event Hub#port\n         * @param port {object}\n         * @param port.port {string}\n         * @param port.action {string}\n         */\n        this.emit('port', {\n          port: this.num2port[data[3]],\n          action: this.num2action[data[4]],\n        });\n        break;\n      }\n      default:\n        this.log('unknown message type 0x' + data[2].toString(16));\n        this.log('<', data);\n    }\n  }\n\n  private parseSensor(data: any) {\n    if (!this.ports[data[3]]) {\n      this.log('parseSensor unknown port 0x' + data[3].toString(16));\n      return;\n    }\n    switch (this.ports[data[3]].deviceType) {\n      case 'DISTANCE': {\n        /**\n         * @event Hub#color\n         * @param color {string}\n         */\n        this.emit('color', this.num2color[data[4]]);\n\n        // TODO: improve distance calculation!\n        let distance: number;\n        if (data[7] > 0 && data[5] < 2) {\n          distance = Math.floor(20 - data[7] * 2.85);\n        } else if (data[5] > 9) {\n          distance = Infinity;\n        } else {\n          distance = Math.floor(20 + data[5] * 18);\n        }\n        /**\n         * @event Hub#distance\n         * @param distance {number} distance in millimeters\n         */\n        this.emit('distance', distance);\n        break;\n      }\n      case 'TILT': {\n        const roll = data.readInt8(4);\n        const pitch = data.readInt8(5);\n\n        /**\n         * @event Hub#tilt\n         * @param tilt {object}\n         * @param tilt.roll {number}\n         * @param tilt.pitch {number}\n         */\n        this.emit('tilt', { roll, pitch });\n        break;\n      }\n      case 'MOTOR':\n      case 'IMOTOR': {\n        const angle = data.readInt32LE(4);\n\n        /**\n         * @event Hub#rotation\n         * @param rotation {object}\n         * @param rotation.port {string}\n         * @param rotation.angle\n         */\n        this.emit('rotation', {\n          port: this.num2port[data[3]],\n          angle,\n        });\n        break;\n      }\n      default:\n        this.log('unknown sensor type 0x' + data[3].toString(16), data[3], this.ports[data[3]].deviceType);\n    }\n  }\n\n  /**\n   * Set Move Hub as disconnected\n   * @method Hub#setDisconnected\n   */\n  setDisconnected() {\n    // TODO: Should get this from some notification?\n    this.connected = false;\n    this.noReconnect = true;\n    this.writeCue = [];\n  }\n\n  /**\n   * Run a motor for specific time\n   * @param {string|number} port possible string values: `A`, `B`, `AB`, `C`, `D`.\n   * @param {number} seconds\n   * @param {number} [dutyCycle=100] motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {function} [callback]\n   */\n  motorTime(port: string | number, seconds: number, dutyCycle: number, callback?: () => void) {\n    if (typeof dutyCycle === 'function') {\n      callback = dutyCycle;\n      dutyCycle = 100;\n    }\n    const portNum = typeof port === 'string' ? this.port2num[port] : port;\n    this.write(this.encodeMotorTime(portNum, seconds, dutyCycle), callback);\n  }\n\n  /**\n   * Run both motors (A and B) for specific time\n   * @param {number} seconds\n   * @param {number} dutyCycleA motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {number} dutyCycleB motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {function} callback\n   */\n  motorTimeMulti(seconds: number, dutyCycleA: number, dutyCycleB: number, callback?: () => void) {\n    this.write(this.encodeMotorTimeMulti(this.port2num['AB'], seconds, dutyCycleA, dutyCycleB), callback);\n  }\n\n  /**\n   * Turn a motor by specific angle\n   * @param {string|number} port possible string values: `A`, `B`, `AB`, `C`, `D`.\n   * @param {number} angle - degrees to turn from `0` to `2147483647`\n   * @param {number} [dutyCycle=100] motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {function} [callback]\n   */\n  motorAngle(port: string | number, angle: number, dutyCycle: number, callback?: () => void) {\n    if (typeof dutyCycle === 'function') {\n      callback = dutyCycle;\n      dutyCycle = 100;\n    }\n    const portNum = typeof port === 'string' ? this.port2num[port] : port;\n    this.write(this.encodeMotorAngle(portNum, angle, dutyCycle), callback);\n  }\n\n  /**\n   * Turn both motors (A and B) by specific angle\n   * @param {number} angle degrees to turn from `0` to `2147483647`\n   * @param {number} dutyCycleA motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {number} dutyCycleB motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {function} callback\n   */\n  motorAngleMulti(angle: number, dutyCycleA: number, dutyCycleB: number, callback?: () => void) {\n    this.write(this.encodeMotorAngleMulti(this.port2num['AB'], angle, dutyCycleA, dutyCycleB), callback);\n  }\n\n  /**\n   * Send raw data\n   * @param {object} raw raw data\n   * @param {function} callback\n   */\n  rawCommand(raw: RawData, callback?: () => void) {\n    // @ts-ignore\n    const buf = Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\n    for (const idx in raw) {\n      buf.writeIntLE(raw[idx], idx);\n    }\n\n    this.write(buf, callback);\n  }\n\n  motorPowerCommand(port: any, power: number) {\n    this.write(this.encodeMotorPower(port, power));\n  }\n\n  //[0x09, 0x00, 0x81, 0x39, 0x11, 0x07, 0x00, 0x64, 0x03]\n  encodeMotorPower(port: string | number, dutyCycle = 100) {\n    const portNum = typeof port === 'string' ? this.port2num[port] : port;\n    // @ts-ignore\n    const buf = Buffer.from([0x09, 0x00, 0x81, portNum, 0x11, 0x07, 0x00, 0x64, 0x03]);\n    //buf.writeUInt16LE(seconds * 1000, 6);\n    buf.writeInt8(dutyCycle, 6);\n    return buf;\n  }\n\n  //0x0C, 0x00, 0x81, port, 0x11, 0x09, 0x00, 0x00, 0x00, 0x64, 0x7F, 0x03\n\n  /**\n   * Control the LED on the Move Hub\n   * @method Hub#led\n   * @param {boolean|number|string} color\n   * If set to boolean `false` the LED is switched off, if set to `true` the LED will be white.\n   * Possible string values: `off`, `pink`, `purple`, `blue`, `lightblue`, `cyan`, `green`, `yellow`, `orange`, `red`,\n   * `white`\n   * @param {function} [callback]\n   */\n  led(color: string | number | boolean, callback?: () => void) {\n    this.write(this.encodeLed(color), callback);\n  }\n\n  /**\n   * Subscribe for sensor notifications\n   * @param {string|number} port - e.g. call `.subscribe('C')` if you have your distance/color sensor on port C.\n   * @param {number} [option=0] Unknown meaning. Needs to be 0 for distance/color, 2 for motors, 8 for tilt\n   * @param {function} [callback]\n   */\n  subscribe(port: string | number, option: number = 0, callback?: () => void) {\n    if (typeof option === 'function') {\n      // TODO: Why we have function check here?\n      callback = option;\n      option = 0x00;\n    }\n    const portNum = typeof port === 'string' ? this.port2num[port] : port;\n    this.write(\n      // @ts-ignore\n      Buffer.from([0x0a, 0x00, 0x41, portNum, option, 0x01, 0x00, 0x00, 0x00, 0x01]),\n      callback\n    );\n  }\n\n  /**\n   * Unsubscribe from sensor notifications\n   * @param {string|number} port\n   * @param {number} [option=0] Unknown meaning. Needs to be 0 for distance/color, 2 for motors, 8 for tilt\n   * @param {function} [callback]\n   */\n  unsubscribe(port: string | number, option: number = 0, callback: () => void) {\n    if (typeof option === 'function') {\n      callback = option;\n      option = 0x00;\n    }\n    const portNum = typeof port === 'string' ? this.port2num[port] : port;\n    this.write(\n      // @ts-ignore\n      Buffer.from([0x0a, 0x00, 0x41, portNum, option, 0x01, 0x00, 0x00, 0x00, 0x00]),\n      callback\n    );\n  }\n\n  subscribeAll() {\n    Object.entries(this.ports).forEach(([port, data]) => {\n      if (data.deviceType === 'DISTANCE') {\n        this.subscribe(parseInt(port, 10), 8);\n      } else if (data.deviceType === 'TILT') {\n        this.subscribe(parseInt(port, 10), 0);\n      } else if (data.deviceType === 'IMOTOR') {\n        this.subscribe(parseInt(port, 10), 2);\n      } else if (data.deviceType === 'MOTOR') {\n        this.subscribe(parseInt(port, 10), 2);\n      } else {\n        this.logDebug(`Port subscribtion not sent: ${port}`);\n      }\n    });\n  }\n\n  /**\n   * Send data over BLE\n   * @method Hub#write\n   * @param {string|Buffer} data If a string is given it has to have hex bytes separated by spaces, e.g. `0a 01 c3 b2`\n   * @param {function} callback\n   */\n  write(data: any, callback?: () => void) {\n    if (typeof data === 'string') {\n      const arr = [];\n      data.split(' ').forEach(c => {\n        arr.push(parseInt(c, 16));\n      });\n      // @ts-ignore\n      data = Buffer.from(arr);\n    }\n\n    // Original implementation passed secondArg to define if response is waited\n    this.writeCue.push({\n      data,\n      secondArg: true,\n      callback,\n    });\n\n    this.writeFromCue();\n  }\n\n  writeFromCue() {\n    if (this.writeCue.length === 0 || this.isWriting) return;\n\n    const el: any = this.writeCue.shift();\n    this.logDebug('Writing to device', el);\n    this.isWriting = true;\n    this.bluetooth\n      .writeValue(el.data)\n      .then(() => {\n        this.isWriting = false;\n        if (typeof el.callback === 'function') el.callback();\n      })\n      .catch(err => {\n        this.isWriting = false;\n        this.log(`Error while writing: ${el.data} - Error ${err.toString()}`);\n        // TODO: Notify of failure\n      })\n      .finally(() => {\n        this.writeFromCue();\n      });\n  }\n\n  encodeMotorTimeMulti(port: number, seconds: number, dutyCycleA = 100, dutyCycleB = -100) {\n    // @ts-ignore\n    const buf = Buffer.from([0x0d, 0x00, 0x81, port, 0x11, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x64, 0x7f, 0x03]);\n    buf.writeUInt16LE(seconds * 1000, 6);\n    buf.writeInt8(dutyCycleA, 8);\n    buf.writeInt8(dutyCycleB, 9);\n    return buf;\n  }\n\n  encodeMotorTime(port: number, seconds: number, dutyCycle = 100) {\n    // @ts-ignore\n    const buf = Buffer.from([0x0c, 0x00, 0x81, port, 0x11, 0x09, 0x00, 0x00, 0x00, 0x64, 0x7f, 0x03]);\n    buf.writeUInt16LE(seconds * 1000, 6);\n    buf.writeInt8(dutyCycle, 8);\n    return buf;\n  }\n\n  encodeMotorAngleMulti(port: number, angle: number, dutyCycleA = 100, dutyCycleB = -100) {\n    // @ts-ignore\n    const buf = Buffer.from([0x0f, 0x00, 0x81, port, 0x11, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x7f, 0x03]);\n    buf.writeUInt32LE(angle, 6);\n    buf.writeInt8(dutyCycleA, 10);\n    buf.writeInt8(dutyCycleB, 11);\n    return buf;\n  }\n\n  encodeMotorAngle(port: number, angle: number, dutyCycle = 100) {\n    // @ts-ignore\n    const buf = Buffer.from([0x0e, 0x00, 0x81, port, 0x11, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x7f, 0x03]);\n    buf.writeUInt32LE(angle, 6);\n    buf.writeInt8(dutyCycle, 10);\n    return buf;\n  }\n\n  encodeLed(color: string | number | boolean) {\n    if (typeof color === 'boolean') {\n      color = color ? 'white' : 'off';\n    }\n    const colorNum = typeof color === 'string' ? this.ledColors.indexOf(color as LedColor) : color;\n    // @ts-ignore\n    return Buffer.from([0x08, 0x00, 0x81, 0x32, 0x11, 0x51, 0x00, colorNum]);\n  }\n}\n","import { Hub } from './hub';\nimport { Motor } from '../types'\n\nconst CALLBACK_TIMEOUT_MS = 1000 / 3;\n\nexport const DEFAULT_CONFIG = {\n  METRIC_MODIFIER: 28.5,\n  TURN_MODIFIER: 2.56,\n  DRIVE_SPEED: 25,\n  TURN_SPEED: 20,\n  DEFAULT_STOP_DISTANCE: 105,\n  DEFAULT_CLEAR_DISTANCE: 120,\n  LEFT_MOTOR: 'A' as Motor,\n  RIGHT_MOTOR: 'B' as Motor,\n  VALID_MOTORS: ['A' as Motor, 'B' as Motor],\n};\n\nconst validateConfiguration = (configuration: BoostConfiguration) => {\n  configuration.leftMotor = configuration.leftMotor || DEFAULT_CONFIG.LEFT_MOTOR;\n  configuration.rightMotor = configuration.rightMotor || DEFAULT_CONFIG.RIGHT_MOTOR;\n\n  // @ts-ignore\n  if (!DEFAULT_CONFIG.VALID_MOTORS.includes(configuration.leftMotor)) throw Error('Define left port port correctly');\n\n  // @ts-ignore\n  if (!DEFAULT_CONFIG.VALID_MOTORS.includes(configuration.rightMotor)) throw Error('Define right port port correctly');\n\n  if (configuration.leftMotor === configuration.rightMotor) throw Error('Left and right motor can not be same');\n\n  configuration.distanceModifier = configuration.distanceModifier || DEFAULT_CONFIG.METRIC_MODIFIER;\n  configuration.turnModifier = configuration.turnModifier || DEFAULT_CONFIG.TURN_MODIFIER;\n  configuration.driveSpeed = configuration.driveSpeed || DEFAULT_CONFIG.DRIVE_SPEED;\n  configuration.turnSpeed = configuration.turnSpeed || DEFAULT_CONFIG.TURN_SPEED;\n  configuration.defaultStopDistance = configuration.defaultStopDistance || DEFAULT_CONFIG.DEFAULT_STOP_DISTANCE;\n  configuration.defaultClearDistance = configuration.defaultClearDistance || DEFAULT_CONFIG.DEFAULT_CLEAR_DISTANCE;\n};\n\nconst waitForValueToSet = function(\n  valueName,\n  compareFunc = valueNameToCompare => this[valueNameToCompare],\n  timeoutMs = 0\n) {\n  if (compareFunc.bind(this)(valueName)) return Promise.resolve(this[valueName]);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(\n      async () => resolve(await waitForValueToSet.bind(this)(valueName, compareFunc, timeoutMs)),\n      timeoutMs + 100\n    );\n  });\n};\n\nexport interface BoostConfiguration {\n  distanceModifier?: any;\n  turnModifier?: any;\n  defaultClearDistance?: any;\n  defaultStopDistance?: any;\n  leftMotor?: Motor;\n  rightMotor?: Motor;\n  driveSpeed?: number;\n  turnSpeed?: number;\n}\n\nexport class HubAsync extends Hub {\n  hubDisconnected: boolean;\n  configuration: BoostConfiguration;\n  portData: any;\n  useMetric: boolean;\n  modifier: number;\n  distance: number;\n\n  constructor(bluetooth: BluetoothRemoteGATTCharacteristic, configuration: BoostConfiguration) {\n    super(bluetooth);\n    validateConfiguration(configuration);\n    this.configuration = configuration;\n  }\n  /**\n   * Disconnect Hub\n   * @method Hub#disconnectAsync\n   * @returns {Promise<boolean>} disconnection successful\n   */\n  disconnectAsync(): Promise<boolean> {\n    this.setDisconnected();\n    return waitForValueToSet.bind(this)('hubDisconnected');\n  }\n\n  /**\n   * Execute this method after new instance of Hub is created\n   * @method Hub#afterInitialization\n   */\n  afterInitialization() {\n    this.hubDisconnected = null;\n    this.portData = {\n      A: { angle: 0 },\n      B: { angle: 0 },\n      AB: { angle: 0 },\n      C: { angle: 0 },\n      D: { angle: 0 },\n      LED: { angle: 0 },\n    };\n    this.useMetric = true;\n    this.modifier = 1;\n\n    this.emitter.on('rotation', rotation => (this.portData[rotation.port].angle = rotation.angle));\n    this.emitter.on('disconnect', () => (this.hubDisconnected = true));\n    this.emitter.on('distance', distance => (this.distance = distance));\n  }\n\n  /**\n   * Control the LED on the Move Hub\n   * @method Hub#ledAsync\n   * @param {boolean|number|string} color\n   * If set to boolean `false` the LED is switched off, if set to `true` the LED will be white.\n   * Possible string values: `off`, `pink`, `purple`, `blue`, `lightblue`, `cyan`, `green`, `yellow`, `orange`, `red`,\n   * `white`\n   * @returns {Promise}\n   */\n  ledAsync(color: boolean | number | string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.led(color, () => {\n        // Callback is executed when command is sent and it will take some time before MoveHub executes the command\n        setTimeout(resolve, CALLBACK_TIMEOUT_MS);\n      });\n    });\n  }\n\n  /**\n   * Run a motor for specific time\n   * @method Hub#motorTimeAsync\n   * @param {string|number} port possible string values: `A`, `B`, `AB`, `C`, `D`.\n   * @param {number} seconds\n   * @param {number} [dutyCycle=100] motor power percentsage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {boolean} [wait=false] will promise wait unitll motorTime run time has elapsed\n   * @returns {Promise}\n   */\n  motorTimeAsync(port: string | number, seconds: number, dutyCycle: number = 100, wait: boolean = false): Promise<any> {\n    return new Promise((resolve, _) => {\n      this.motorTime(port, seconds, dutyCycle, () => {\n        setTimeout(resolve, wait ? CALLBACK_TIMEOUT_MS + seconds * 1000 : CALLBACK_TIMEOUT_MS);\n      });\n    });\n  }\n\n  /**\n   * Run both motors (A and B) for specific time\n   * @method Hub#motorTimeMultiAsync\n   * @param {number} seconds\n   * @param {number} [dutyCycleA=100] motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {number} [dutyCycleB=100] motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {boolean} [wait=false] will promise wait unitll motorTime run time has elapsed\n   * @returns {Promise}\n   */\n  motorTimeMultiAsync(seconds: number, dutyCycleA: number = 100, dutyCycleB: number = 100, wait: boolean = false): Promise<any> {\n    return new Promise((resolve, _) => {\n      this.motorTimeMulti(seconds, dutyCycleA, dutyCycleB, () => {\n        setTimeout(resolve, wait ? CALLBACK_TIMEOUT_MS + seconds * 1000 : CALLBACK_TIMEOUT_MS);\n      });\n    });\n  }\n\n  /**\n   * Turn a motor by specific angle\n   * @method Hub#motorAngleAsync\n   * @param {string|number} port possible string values: `A`, `B`, `AB`, `C`, `D`.\n   * @param {number} angle - degrees to turn from `0` to `2147483647`\n   * @param {number} [dutyCycle=100] motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {boolean} [wait=false] will promise wait unitll motorAngle has turned\n   * @returns {Promise}\n   */\n  motorAngleAsync(port: string | number, angle: number, dutyCycle: number = 100, wait: boolean = false): Promise<any> {\n    return new Promise((resolve, _) => {\n      this.motorAngle(port, angle, dutyCycle, async () => {\n        if (wait) {\n          let beforeTurn;\n          do {\n            beforeTurn = this.portData[port].angle;\n            await new Promise(res => setTimeout(res, CALLBACK_TIMEOUT_MS));\n          } while (this.portData[port].angle !== beforeTurn);\n          resolve();\n        } else {\n          setTimeout(resolve, CALLBACK_TIMEOUT_MS);\n        }\n      });\n    });\n  }\n\n  /**\n   * Turn both motors (A and B) by specific angle\n   * @method Hub#motorAngleMultiAsync\n   * @param {number} angle degrees to turn from `0` to `2147483647`\n   * @param {number} [dutyCycleA=100] motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {number} [dutyCycleB=100] motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {boolean} [wait=false] will promise wait unitll motorAngle has turned\n   * @returns {Promise}\n   */\n  motorAngleMultiAsync(angle: number, dutyCycleA: number = 100, dutyCycleB: number = 100, wait: boolean = false): Promise<any> {\n    return new Promise((resolve, _) => {\n      this.motorAngleMulti(angle, dutyCycleA, dutyCycleB, async () => {\n        if (wait) {\n          let beforeTurn;\n          do {\n            beforeTurn = this.portData['AB'].angle;\n            await new Promise(res => setTimeout(res, CALLBACK_TIMEOUT_MS));\n          } while (this.portData['AB'].angle !== beforeTurn);\n          resolve();\n        } else {\n          setTimeout(resolve, CALLBACK_TIMEOUT_MS);\n        }\n      });\n    });\n  }\n\n  /**\n   * Use metric units (default)\n   * @method Hub#useMetricUnits\n   */\n  useMetricUnits() {\n    this.useMetric = true;\n  }\n\n  /**\n   * Use imperial units\n   * @method Hub#useImperialUnits\n   */\n  useImperialUnits() {\n    this.useMetric = false;\n  }\n\n  /**\n   * Set friction modifier\n   * @method Hub#setFrictionModifier\n   * @param {number} modifier friction modifier\n   */\n  setFrictionModifier(modifier: number) {\n    this.modifier = modifier;\n  }\n\n  /**\n   * Drive specified distance\n   * @method Hub#drive\n   * @param {number} distance distance in centimeters (default) or inches. Positive is forward and negative is backward.\n   * @param {boolean} [wait=true] will promise wait untill the drive has completed.\n   * @returns {Promise}\n   */\n  drive(distance: number, wait: boolean = true): Promise<any> {\n    const angle =\n      Math.abs(distance) *\n      ((this.useMetric ? this.configuration.distanceModifier : this.configuration.distanceModifier / 4) *\n        this.modifier);\n    const dutyCycleA =\n      this.configuration.driveSpeed * (distance > 0 ? 1 : -1) * (this.configuration.leftMotor === 'A' ? 1 : -1);\n    const dutyCycleB =\n      this.configuration.driveSpeed * (distance > 0 ? 1 : -1) * (this.configuration.leftMotor === 'A' ? 1 : -1);\n    return this.motorAngleMultiAsync(angle, dutyCycleA, dutyCycleB, wait);\n  }\n\n  /**\n   * Turn robot specified degrees\n   * @method Hub#turn\n   * @param {number} degrees degrees to turn. Negative is to the left and positive to the right.\n   * @param {boolean} [wait=true] will promise wait untill the turn has completed.\n   * @returns {Promise}\n   */\n  turn(degrees: number, wait: boolean = true): Promise<any> {\n    const angle = Math.abs(degrees) * this.configuration.turnModifier;\n    const turnMotorModifier = this.configuration.leftMotor === 'A' ? 1 : -1;\n    const leftTurn = this.configuration.turnSpeed * (degrees > 0 ? 1 : -1) * turnMotorModifier;\n    const rightTurn = this.configuration.turnSpeed * (degrees > 0 ? -1 : 1) * turnMotorModifier;\n    const dutyCycleA = this.configuration.leftMotor === 'A' ? leftTurn : rightTurn;\n    const dutyCycleB = this.configuration.leftMotor === 'A' ? rightTurn : leftTurn;\n    return this.motorAngleMultiAsync(angle, dutyCycleA, dutyCycleB, wait);\n  }\n\n  /**\n   * Drive untill sensor shows object in defined distance\n   * @method Hub#driveUntil\n   * @param {number} [distance=0] distance in centimeters (default) or inches when to stop. Distance sensor is not very sensitive or accurate.\n   * By default will stop when sensor notices wall for the first time. Sensor distance values are usualy between 110-50.\n   * @param {boolean} [wait=true] will promise wait untill the bot will stop.\n   * @returns {Promise}\n   */\n  async driveUntil(distance: number = 0, wait: boolean = true): Promise<any> {\n    const distanceCheck =\n      distance !== 0 ? (this.useMetric ? distance : distance * 2.54) : this.configuration.defaultStopDistance;\n    const direction = this.configuration.leftMotor === 'A' ? 1 : -1;\n    const compareFunc = direction === 1 ? () => distanceCheck >= this.distance : () => distanceCheck <= this.distance;\n    this.motorTimeMulti(60, this.configuration.driveSpeed * direction, this.configuration.driveSpeed * direction);\n    if (wait) {\n      await waitForValueToSet.bind(this)('distance', compareFunc);\n      await this.motorAngleMultiAsync(0);\n    } else {\n      return waitForValueToSet\n        .bind(this)('distance', compareFunc)\n        .then(_ => this.motorAngleMulti(0, 0, 0));\n    }\n  }\n\n  /**\n   * Turn until there is no object in sensors sight\n   * @method Hub#turnUntil\n   * @param {number} [direction=1] direction to turn to. 1 (or any positive) is to the right and 0 (or any negative) is to the left.\n   * @param {boolean} [wait=true] will promise wait untill the bot will stop.\n   * @returns {Promise}\n   */\n  async turnUntil(direction: number = 1, wait: boolean = true): Promise<any> {\n    const directionModifier = direction > 0 ? 1 : -1;\n    this.turn(360 * directionModifier, false);\n    if (wait) {\n      await waitForValueToSet.bind(this)('distance', () => this.distance >= this.configuration.defaultClearDistance);\n      await this.turn(0, false);\n    } else {\n      return waitForValueToSet\n        .bind(this)('distance', () => this.distance >= this.configuration.defaultClearDistance)\n        .then(_ => this.turn(0, false));\n    }\n  }\n\n  updateConfiguration(configuration: BoostConfiguration): void {\n    validateConfiguration(configuration);\n    this.configuration = configuration;\n  }\n}\n","import { HubControl } from '../hub-control';\n\nfunction manual(hubControl: HubControl) {\n  if (hubControl.control.speed !== hubControl.prevControl.speed || hubControl.control.turnAngle !== hubControl.prevControl.turnAngle) {\n    let motorA = hubControl.control.speed + (hubControl.control.turnAngle > 0 ? Math.abs(hubControl.control.turnAngle) : 0);\n    let motorB = hubControl.control.speed + (hubControl.control.turnAngle < 0 ? Math.abs(hubControl.control.turnAngle) : 0);\n\n    if (motorA > 100) {\n      motorB -= motorA - 100;\n      motorA = 100;\n    }\n\n    if (motorB > 100) {\n      motorA -= motorB - 100;\n      motorB = 100;\n    }\n\n    hubControl.control.motorA = motorA;\n    hubControl.control.motorB = motorB;\n\n    hubControl.hub.motorTimeMulti(60, motorA, motorB);\n  }\n\n  if (hubControl.control.tilt.pitch !== hubControl.prevControl.tilt.pitch) {\n    hubControl.hub.motorTime('C', 60, hubControl.control.tilt.pitch);\n  }\n\n  if (hubControl.control.tilt.roll !== hubControl.prevControl.tilt.roll) {\n    hubControl.hub.motorTime('D', 60, hubControl.control.tilt.roll);\n  }\n}\n\nexport { manual };\n","import { HubControl } from '../hub-control';\n\nconst MIN_DISTANCE = 75;\nconst OK_DISTANCE = 100;\n\nconst EXECUTE_TIME_SEC = 60;\nconst CHECK_TIME_MS = 59000;\n\n// Speeds must be between -100 and 100\nconst TURN_SPEED = 30;\nconst TURN_SPEED_OPPOSITE = -10;\nconst DRIVE_SPEED = 30;\nconst REVERSE_SPEED = -15;\n\nconst seek = (hubControl: HubControl) => {\n  if (!hubControl.control.controlUpdateTime || Date.now() - hubControl.control.controlUpdateTime > CHECK_TIME_MS) {\n    hubControl.control.controlUpdateTime = Date.now();\n    hubControl.hub.motorTimeMulti(EXECUTE_TIME_SEC, TURN_SPEED, TURN_SPEED_OPPOSITE);\n  }\n\n  if (Date.now() - hubControl.control.controlUpdateTime < 250) return;\n\n  if (hubControl.device.distance > hubControl.prevDevice.distance) {\n    hubControl.control.turnDirection = 'right';\n    hubControl.setNextState('Turn');\n  } else {\n    hubControl.control.turnDirection = 'left';\n    hubControl.setNextState('Turn');\n  }\n}\n\nconst turn = (hubControl: HubControl) => {\n  if (hubControl.device.distance < MIN_DISTANCE) {\n    hubControl.control.turnDirection = null;\n    hubControl.setNextState('Back');\n    return;\n  } else if (hubControl.device.distance > OK_DISTANCE) {\n    hubControl.control.turnDirection = null;\n    hubControl.setNextState('Drive');\n    return;\n  }\n\n  if (!hubControl.control.controlUpdateTime || Date.now() - hubControl.control.controlUpdateTime > CHECK_TIME_MS) {\n    const motorA = hubControl.control.turnDirection === 'right' ? TURN_SPEED : TURN_SPEED_OPPOSITE;\n    const motorB = hubControl.control.turnDirection === 'right' ? TURN_SPEED_OPPOSITE : TURN_SPEED;\n\n    hubControl.control.controlUpdateTime = Date.now();\n    hubControl.hub.motorTimeMulti(EXECUTE_TIME_SEC, motorA, motorB);\n  }\n}\n\n\nconst drive = (hubControl: HubControl) => {\n  if (hubControl.device.distance < MIN_DISTANCE) {\n    hubControl.setNextState('Back');\n    return;\n  } else if (hubControl.device.distance < OK_DISTANCE) {\n    hubControl.setNextState('Seek');\n    return;\n  }\n\n  if (!hubControl.control.controlUpdateTime || Date.now() - hubControl.control.controlUpdateTime > CHECK_TIME_MS) {\n    hubControl.control.controlUpdateTime = Date.now();\n    const speed = hubControl.configuration.leftMotor === 'A' ? DRIVE_SPEED : DRIVE_SPEED * -1;\n    hubControl.hub.motorTimeMulti(EXECUTE_TIME_SEC, speed, speed);\n  }\n}\n\nconst back = (hubControl: HubControl) => {\n  if (hubControl.device.distance > OK_DISTANCE) {\n    hubControl.setNextState('Seek');\n    return;\n  }\n\n  if (!hubControl.control.controlUpdateTime || Date.now() - hubControl.control.controlUpdateTime > CHECK_TIME_MS) {\n    hubControl.control.controlUpdateTime = Date.now();\n    const speed = hubControl.configuration.leftMotor === 'A' ? REVERSE_SPEED : REVERSE_SPEED * -1;\n    hubControl.hub.motorTimeMulti(EXECUTE_TIME_SEC, speed, speed);\n  }\n}\n\n\nconst stop = (hubControl: HubControl) => {\n  hubControl.control.speed = 0;\n  hubControl.control.turnAngle = 0;\n\n  if (!hubControl.control.controlUpdateTime || Date.now() - hubControl.control.controlUpdateTime > CHECK_TIME_MS) {\n    hubControl.control.controlUpdateTime = Date.now();\n    hubControl.hub.motorTimeMulti(EXECUTE_TIME_SEC, 0, 0);\n  }\n}\n\nexport { stop, back, drive, turn, seek };\n","import { manual } from './states/manual';\nimport { stop, back, drive, turn, seek } from './states/ai';\nimport { BoostConfiguration, HubAsync } from '../hub/hubAsync';\nimport { ControlData, DeviceInfo, State } from '../types';\n\ntype States = {\n  [key in State]: (hub: HubControl) => void;\n};\n\nclass HubControl {\n  hub: HubAsync;\n  device: DeviceInfo;\n  prevDevice: DeviceInfo;\n  control: ControlData;\n  prevControl: ControlData;\n  configuration: BoostConfiguration;\n  states: States;\n  currentState: (hub: HubControl) => void;\n\n  constructor(deviceInfo: DeviceInfo, controlData: ControlData, configuration: BoostConfiguration) {\n    this.hub = null;\n    this.device = deviceInfo;\n    this.control = controlData;\n    this.configuration = configuration;\n    this.prevControl = { ...this.control };\n\n    this.states = {\n      Turn: turn,\n      Drive: drive,\n      Stop: stop,\n      Back: back,\n      Manual: manual,\n      Seek: seek,\n    };\n\n    this.currentState = this.states['Manual'];\n  }\n\n  updateConfiguration(configuration: BoostConfiguration): void {\n    this.configuration = configuration;\n  }\n\n  async start(hub: HubAsync) {\n    this.hub = hub;\n    this.device.connected = true;\n\n    this.hub.emitter.on('error', err => {\n      this.device.err = err;\n    });\n\n    this.hub.emitter.on('disconnect', () => {\n      this.device.connected = false;\n    });\n\n    this.hub.emitter.on('distance', distance => {\n      this.device.distance = distance;\n    });\n\n    this.hub.emitter.on('rssi', rssi => {\n      this.device.rssi = rssi;\n    });\n\n    this.hub.emitter.on('port', portObject => {\n      const { port, action } = portObject;\n      this.device.ports[port].action = action;\n    });\n\n    this.hub.emitter.on('color', color => {\n      this.device.color = color;\n    });\n\n    this.hub.emitter.on('tilt', tilt => {\n      const { roll, pitch } = tilt;\n      this.device.tilt.roll = roll;\n      this.device.tilt.pitch = pitch;\n    });\n\n    this.hub.emitter.on('rotation', rotation => {\n      const { port, angle } = rotation;\n      this.device.ports[port].angle = angle;\n    });\n\n    await this.hub.ledAsync('red');\n    await this.hub.ledAsync('yellow');\n    await this.hub.ledAsync('green');\n  }\n\n  async disconnect() {\n    if (this.device.connected) {\n      await this.hub.disconnectAsync();\n    }\n  }\n\n  setNextState(state: State) {\n    this.control.controlUpdateTime = undefined;\n    this.control.state = state;\n    this.currentState = this.states[state];\n  }\n\n  update() {\n    // TODO: After removing bind, this requires some more refactoring\n    this.currentState(this);\n\n    // TODO: Deep clone\n    this.prevControl = { ...this.control };\n    this.prevControl.tilt = { ...this.control.tilt };\n    this.prevDevice = { ...this.device };\n  }\n}\n\nexport { HubControl };\n","import { BoostConnector } from './boostConnector';\nimport { HubAsync, BoostConfiguration } from './hub/hubAsync';\nimport { HubControl } from './ai/hub-control';\nimport { DeviceInfo, ControlData, RawData } from './types';\n\nexport default class LegoBoost {\n  private hub: HubAsync;\n  private hubControl: HubControl;\n  private color: string;\n  private updateTimer: any;\n  private configuration: BoostConfiguration;\n\n  private logDebug: (message?: any, ...optionalParams: any[]) => void = s => {};\n\n  /**\n   * Information from Lego Boost motors and sensors\n   * @property LegoBoost#deviceInfo\n   */\n  public deviceInfo: DeviceInfo = {\n    ports: {\n      A: { action: '', angle: 0 },\n      B: { action: '', angle: 0 },\n      AB: { action: '', angle: 0 },\n      C: { action: '', angle: 0 },\n      D: { action: '', angle: 0 },\n      LED: { action: '', angle: 0 },\n    },\n    tilt: { roll: 0, pitch: 0 },\n    distance: Number.MAX_SAFE_INTEGER,\n    rssi: 0,\n    color: '',\n    error: '',\n    connected: false,\n  };\n\n  /**\n   * Input data to used on manual and AI control\n   * @property LegoBoost#controlData\n   */\n  public controlData: ControlData = {\n    input: null,\n    speed: 0,\n    turnAngle: 0,\n    tilt: { roll: 0, pitch: 0 },\n    forceState: null,\n    updateInputMode: null,\n    controlUpdateTime: undefined,\n    state: undefined,\n  };\n\n  /**\n   * Drive forward until wall is reaced or drive backwards 100meters\n   * @method LegoBoost#connect\n   * @param {BoostConfiguration} [configuration={}] Lego boost motor and control configuration\n   * @returns {Promise}\n   */\n  async connect(configuration: BoostConfiguration = {}): Promise<void> {\n    try {\n      this.configuration = configuration;\n      const bluetooth = await BoostConnector.connect(this.handleGattDisconnect.bind(this));\n      this.initHub(bluetooth, this.configuration);\n    } catch (e) {\n      console.log('Error from connect: ' + e);\n    }\n  }\n\n  private async initHub(bluetooth: BluetoothRemoteGATTCharacteristic, configuration: BoostConfiguration) {\n    this.hub = new HubAsync(bluetooth, configuration);\n    this.hub.logDebug = this.logDebug;\n\n    this.hub.emitter.on('disconnect', async evt => {\n      // TODO: This is never launched as event comes from BoostConnector\n      // await BoostConnector.reconnect();\n    });\n\n    this.hub.emitter.on('connect', async evt => {\n      this.hub.afterInitialization();\n      await this.hub.ledAsync('white');\n      this.logDebug('Connected');\n    });\n\n    this.hubControl = new HubControl(this.deviceInfo, this.controlData, configuration);\n    await this.hubControl.start(this.hub);\n\n    this.updateTimer = setInterval(() => {\n      this.hubControl.update();\n    }, 100);\n  }\n\n  private async handleGattDisconnect() {\n    this.logDebug('handleGattDisconnect');\n\n    if (this.deviceInfo.connected === false) return;\n\n    this.hub.setDisconnected();\n    this.deviceInfo.connected = false;\n    clearInterval(this.updateTimer);\n    this.logDebug('Disconnected');\n\n    // TODO: Can't get autoreconnect to work\n    // if (this.hub.noReconnect) {\n    //   this.hub.setDisconnected();\n    //   this.deviceInfo.connected = false;\n    // } else {\n    //   this.hub.setDisconnected();\n    //   this.deviceInfo.connected = false;\n    //   const reconnection = await BoostConnector.reconnect();\n    //   if (reconnection[0]) {\n    //     await this.initHub(reconnection[1], this.configuration);\n    //   } else {\n    //     this.logDebug('Reconnection failed');\n    //   }\n    // }\n  }\n\n  /**\n   * Change the color of the led between pink and orange\n   * @method LegoBoost#changeLed\n   * @returns {Promise}\n   */\n  async changeLed(): Promise<void> {\n    if (!this.hub || this.hub.connected === false) return;\n    this.color = this.color === 'pink' ? 'orange' : 'pink';\n    await this.hub.ledAsync(this.color);\n  }\n\n  /**\n   * Drive forward until wall is reaced or drive backwards 100meters\n   * @method LegoBoost#driveToDirection\n   * @param {number} [direction=1] Direction to drive. 1 or positive is forward, 0 or negative is backwards.\n   * @returns {Promise}\n   */\n  async driveToDirection(direction = 1): Promise<{}> {\n    if (!this.preCheck()) return;\n    if (direction > 0) return await this.hub.driveUntil();\n    else return await this.hub.drive(-10000);\n  }\n\n  /**\n   * Disconnect Lego Boost\n   * @method LegoBoost#disconnect\n   * @returns {boolean|undefined}\n   */\n  disconnect(): boolean | undefined {\n    if (!this.hub || this.hub.connected === false) return;\n    this.hub.setDisconnected();\n    const success = BoostConnector.disconnect();\n    return success;\n  }\n\n  /**\n   * Start AI mode\n   * @method LegoBoost#ai\n   */\n  ai(): void {\n    if (!this.hub || this.hub.connected === false) return;\n    this.hubControl.setNextState('Drive');\n  }\n\n  /**\n   * Stop engines A and B\n   * @method LegoBoost#stop\n   * @returns {Promise}\n   */\n  async stop(): Promise<{}> {\n    if (!this.preCheck()) return;\n    this.controlData.speed = 0;\n    this.controlData.turnAngle = 0;\n    // control datas values might have always been 0, execute force stop\n    return await this.hub.motorTimeMultiAsync(1, 0, 0);\n  }\n\n  /**\n   * Update Boost motor and control configuration\n   * @method LegoBoost#updateConfiguration\n   * @param {BoostConfiguration} configuration Boost motor and control configuration\n   */\n  updateConfiguration(configuration: BoostConfiguration): void {\n    if (!this.hub) return;\n    this.hub.updateConfiguration(configuration);\n    this.hubControl.updateConfiguration(configuration);\n  }\n\n  // Methods from Hub\n\n  /**\n   * Control the LED on the Move Hub\n   * @method LegoBoost#led\n   * @param {boolean|number|string} color\n   * If set to boolean `false` the LED is switched off, if set to `true` the LED will be white.\n   * Possible string values: `off`, `pink`, `purple`, `blue`, `lightblue`, `cyan`, `green`, `yellow`, `orange`, `red`,\n   * `white`\n   */\n  led(color: boolean | number | string): void {\n    if (!this.preCheck()) return;\n    this.hub.led(color);\n  }\n\n  /**\n   * Control the LED on the Move Hub\n   * @method LegoBoost#ledAsync\n   * @param {boolean|number|string} color\n   * If set to boolean `false` the LED is switched off, if set to `true` the LED will be white.\n   * Possible string values: `off`, `pink`, `purple`, `blue`, `lightblue`, `cyan`, `green`, `yellow`, `orange`, `red`,\n   * `white`\n   * @returns {Promise}\n   */\n  async ledAsync(color: boolean | number | string): Promise<{}> {\n    if (!this.preCheck()) return;\n    return await this.hub.ledAsync(color);\n  }\n\n  /**\n   * Run a motor for specific time\n   * @param {string|number} port possible string values: `A`, `B`, `AB`, `C`, `D`.\n   * @param {number} seconds\n   * @param {number} [dutyCycle=100] motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   */\n  motorTime(port: string | number, seconds: number, dutyCycle = 100): void {\n    if (!this.preCheck()) return;\n    this.hub.motorTime(port, seconds, dutyCycle);\n  }\n\n  /**\n   * Run a motor for specific time\n   * @method LegoBoost#motorTimeAsync\n   * @param {string|number} port possible string values: `A`, `B`, `AB`, `C`, `D`.\n   * @param {number} seconds\n   * @param {number} [dutyCycle=100] motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {boolean} [wait=false] will promise wait unitll motorTime run time has elapsed\n   * @returns {Promise}\n   */\n  async motorTimeAsync(\n    port: string | number,\n    seconds: number,\n    dutyCycle: number = 100,\n    wait: boolean = true\n  ): Promise<void> {\n    if (!this.preCheck()) return;\n    await this.hub.motorTimeAsync(port, seconds, dutyCycle, wait);\n  }\n\n  /**\n   * Run both motors (A and B) for specific time\n   * @param {number} seconds\n   * @param {number} dutyCycleA motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {number} dutyCycleB motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {function} callback\n   */\n  motorTimeMulti(seconds: number, dutyCycleA: number = 100, dutyCycleB: number = 100): void {\n    if (!this.preCheck()) return;\n    this.hub.motorTimeMulti(seconds, dutyCycleA, dutyCycleB);\n  }\n\n  /**\n   * Run both motors (A and B) for specific time\n   * @method LegoBoost#motorTimeMultiAsync\n   * @param {number} seconds\n   * @param {number} [dutyCycleA=100] motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {number} [dutyCycleB=100] motor power percentage from `-100` to `100`. If a negative value is given rotation\n   * is counterclockwise.\n   * @param {boolean} [wait=false] will promise wait unitll motorTime run time has elapsed\n   * @returns {Promise}\n   */\n  async motorTimeMultiAsync(\n    seconds: number,\n    dutyCycleA: number = 100,\n    dutyCycleB: number = 100,\n    wait: boolean = true\n  ): Promise<void> {\n    if (!this.preCheck()) return;\n    await this.hub.motorTimeMultiAsync(seconds, dutyCycleA, dutyCycleB, wait);\n  }\n\n  /**\n   * Turn a motor by specific angle\n   * @param {string|number} port possible string values: `A`, `B`, `AB`, `C`, `D`.\n   * @param {number} angle - degrees to turn from `0` to `2147483647`\n   * @param {number} [dutyCycle=100] motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   */\n  motorAngle(port: string | number, angle: number, dutyCycle: number = 100): void {\n    if (!this.preCheck()) return;\n    this.hub.motorAngle(port, angle, dutyCycle);\n  }\n\n  /**\n   * Turn a motor by specific angle\n   * @method LegoBoost#motorAngleAsync\n   * @param {string|number} port possible string values: `A`, `B`, `AB`, `C`, `D`.\n   * @param {number} angle - degrees to turn from `0` to `2147483647`\n   * @param {number} [dutyCycle=100] motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {boolean} [wait=false] will promise wait unitll motorAngle has turned\n   * @returns {Promise}\n   */\n  async motorAngleAsync(\n    port: string | number,\n    angle: number,\n    dutyCycle: number = 100,\n    wait: boolean = true\n  ): Promise<void> {\n    if (!this.preCheck()) return;\n    await this.hub.motorAngleAsync(port, angle, dutyCycle, wait);\n  }\n\n  /**\n   * Turn both motors (A and B) by specific angle\n   * @method LegoBoost#motorAngleMulti\n   * @param {number} angle degrees to turn from `0` to `2147483647`\n   * @param {number} dutyCycleA motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {number} dutyCycleB motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   */\n  motorAngleMulti(angle: number, dutyCycleA: number = 100, dutyCycleB: number = 100): void {\n    if (!this.preCheck()) return;\n    this.hub.motorAngleMulti(angle, dutyCycleA, dutyCycleB);\n  }\n\n  /**\n   * Turn both motors (A and B) by specific angle\n   * @method LegoBoost#motorAngleMultiAsync\n   * @param {number} angle degrees to turn from `0` to `2147483647`\n   * @param {number} [dutyCycleA=100] motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {number} [dutyCycleB=100] motor power percentage from `-100` to `100`. If a negative value is given\n   * rotation is counterclockwise.\n   * @param {boolean} [wait=false] will promise wait unitll motorAngle has turned\n   * @returns {Promise}\n   */\n  async motorAngleMultiAsync(\n    angle: number,\n    dutyCycleA: number = 100,\n    dutyCycleB: number = 100,\n    wait: boolean = true\n  ): Promise<void> {\n    if (!this.preCheck()) return;\n    await this.hub.motorAngleMultiAsync(angle, dutyCycleA, dutyCycleB, wait);\n  }\n\n  /**\n   * Drive specified distance\n   * @method LegoBoost#drive\n   * @param {number} distance distance in centimeters (default) or inches. Positive is forward and negative is backward.\n   * @param {boolean} [wait=true] will promise wait untill the drive has completed.\n   * @returns {Promise}\n   */\n  async drive(distance: number, wait: boolean = true): Promise<{}> {\n    if (!this.preCheck()) return;\n    return await this.hub.drive(distance, wait);\n  }\n\n  /**\n   * Turn robot specified degrees\n   * @method LegoBoost#turn\n   * @param {number} degrees degrees to turn. Negative is to the left and positive to the right.\n   * @param {boolean} [wait=true] will promise wait untill the turn has completed.\n   * @returns {Promise}\n   */\n  async turn(degrees: number, wait: boolean = true): Promise<{}> {\n    if (!this.preCheck()) return;\n    return await this.hub.turn(degrees, wait);\n  }\n\n  /**\n   * Drive untill sensor shows object in defined distance\n   * @method LegoBoost#driveUntil\n   * @param {number} [distance=0] distance in centimeters (default) or inches when to stop. Distance sensor is not very sensitive or accurate.\n   * By default will stop when sensor notices wall for the first time. Sensor distance values are usualy between 110-50.\n   * @param {boolean} [wait=true] will promise wait untill the bot will stop.\n   * @returns {Promise}\n   */\n  async driveUntil(distance: number = 0, wait: boolean = true): Promise<any> {\n    if (!this.preCheck()) return;\n    return await this.hub.driveUntil(distance, wait);\n  }\n\n  /**\n   * Turn until there is no object in sensors sight\n   * @method LegoBoost#turnUntil\n   * @param {number} [direction=1] direction to turn to. 1 (or any positive) is to the right and 0 (or any negative) is to the left.\n   * @param {boolean} [wait=true] will promise wait untill the bot will stop.\n   * @returns {Promise}\n   */\n  async turnUntil(direction: number = 1, wait: boolean = true): Promise<any> {\n    if (!this.preCheck()) return;\n    return await this.hub.turnUntil(direction, wait);\n  }\n\n  /**\n   * Send raw data\n   * @param {object} raw raw data\n   */\n  rawCommand(raw: RawData): void {\n    if (!this.preCheck()) return;\n    return this.hub.rawCommand(raw);\n  }\n\n  private preCheck(): boolean {\n    if (!this.hub || this.hub.connected === false) return false;\n    this.hubControl.setNextState('Manual');\n    return true;\n  }\n}\n","import LegoBoost from 'lego-boost-browser';\n\nfunction controller() {\n  this.boost = null;\n  this.v = 0.0;\n  this.direction = 0.0;\n  this.accelerometer = null\n\n  this.drive = function (v, direction) {\n    this.v = v;\n    this.direction = direction\n  }\n  this.move = function () {\n    let a = this.v * (this.direction > 0 ? (1.0 - this.direction) : 1)\n    let b = this.v * (this.direction < 0 ? (1.0 + this.direction) : 1)\n    this.boost.motorTime(\"A\", 0.5, a);\n    this.boost.motorTime(\"B\", 0.5, b);\n  }\n}\n\nconst ctx = new controller();\n\nfunction showAcc() {\n  let acc = document.getElementById('acc')\n  acc.innerText = `${ctx.accelerometer.x} ${ctx.accelerometer.y} ${ctx.accelerometer.z}`\n}\n\nfunction initAcc() {\n  navigator.permissions.query({name: 'accelerometer'}).then((result) => {\n      ctx.accelerometer = new Accelerometer()\n      ctx.accelerometer.start();\n      showAcc()\n    } // setInterval(showAcc, 300)\n  )\n\n}\n\nfunction init() {\n\n  document.getElementById('start').onclick = start;\n  document.getElementById('fw').onclick = () => ctx.drive(100, 0);\n  document.getElementById('left').onclick = () => ctx.drive(100, 1);\n  document.getElementById(\"right\").onclick = () => ctx.drive(100, -1);\n  document.getElementById(\"stop\").onclick = () => ctx.drive(0, 0);\n\n  try {\n    initAcc()\n  } catch (e) {\n    alert(e.toString())\n  }\n}\n\nfunction start() {\n  let boost = new LegoBoost();\n  boost.connect().then(() => {\n    ctx.boost = boost\n    setInterval(() => ctx.move(), 100)\n  })\n  console.info(boost);\n}\n\ndocument.addEventListener('DOMContentLoaded', init);\n\n\n"],"names":["$5ebae057da426ad9$export$6503ec6e8aabbaf","$5ebae057da426ad9$export$f7ad0328861e2f03","$5ebae057da426ad9$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","import","parcelRequire","resolve","then","register","JSON","parse","$5a33097975d6cdc8$var$BOOST_HUB_SERVICE_UUID","$5a33097975d6cdc8$var$BoostConnector","BoostConnector","connect","disconnectCallback","options","acceptAllDevices","filters","services","optionalServices","_a","this","navigator","bluetooth","requestDevice","device","_b","sent","addEventListener","event","$5a33097975d6cdc8$var$__awaiter","_this","getCharacteristic","gatt","getPrimaryService","reconnect","disconnect","isWebBluetoothSupported","$5a33097975d6cdc8$exports","$11899652bbf44c6e$var$EventEmitter","EventEmitter","events","prototype","on","listener","push","removeListener","idx","indexOf","splice","removeAllListeners","forEach","emit","args","_i","arguments","$11899652bbf44c6e$var$__spreadArrays","apply","once","remove","$11899652bbf44c6e$exports","$005e80a390678928$var$base64","Promise","$005e80a390678928$var$ieee754","$005e80a390678928$exports","INSPECT_MAX_BYTES","$005e80a390678928$var$K_MAX_LENGTH","$005e80a390678928$var$kMaxLength","$005e80a390678928$var$createBuffer","RangeError","buf","Uint8Array","__proto__","$005e80a390678928$var$Buffer","arg","encodingOrOffset","TypeError","$005e80a390678928$var$allocUnsafe","$005e80a390678928$var$from","value","string","encoding","isEncoding","$005e80a390678928$var$byteLength","actual","write","slice","$005e80a390678928$var$fromString","ArrayBuffer","isView","$005e80a390678928$var$fromArrayLike","$005e80a390678928$var$isInstance","buffer","array","byteOffset","byteLength","undefined","$005e80a390678928$var$fromArrayBuffer","valueOf","from","b","obj","isBuffer","len","$005e80a390678928$var$checked","copy","$005e80a390678928$var$numberIsNaN","type","Array","isArray","data","$005e80a390678928$var$fromObject","Symbol","toPrimitive","$005e80a390678928$var$assertSize","size","toString","mustMatch","loweredCase","$005e80a390678928$var$utf8ToBytes","$005e80a390678928$var$base64ToBytes","toLowerCase","$005e80a390678928$var$slowToString","start","end","$005e80a390678928$var$hexSlice","$005e80a390678928$var$utf8Slice","$005e80a390678928$var$asciiSlice","$005e80a390678928$var$latin1Slice","$005e80a390678928$var$base64Slice","$005e80a390678928$var$utf16leSlice","$005e80a390678928$var$swap","n","m","$005e80a390678928$var$bidirectionalIndexOf","val","dir","$005e80a390678928$var$arrayIndexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","$005e80a390678928$var$hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","$005e80a390678928$var$utf8Write","$005e80a390678928$var$blitBuffer","$005e80a390678928$var$asciiWrite","str","byteArray","charCodeAt","$005e80a390678928$var$asciiToBytes","$005e80a390678928$var$latin1Write","$005e80a390678928$var$base64Write","$005e80a390678928$var$ucs2Write","units","c","hi","lo","$005e80a390678928$var$utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$005e80a390678928$var$MAX_ARGUMENTS_LENGTH","fromCharCode","$005e80a390678928$var$decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","e","$005e80a390678928$var$typedArraySupport","console","error","defineProperty","enumerable","get","Buffer","species","configurable","writable","poolSize","alloc","fill","$005e80a390678928$var$alloc","allocUnsafe","allocUnsafeSlow","SlowBuffer","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$005e80a390678928$var$toHex","bytes","$005e80a390678928$var$checkOffset","ext","$005e80a390678928$var$checkInt","max","$005e80a390678928$var$checkIEEE754","$005e80a390678928$var$writeFloat","littleEndian","noAssert","$005e80a390678928$var$writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","code","$005e80a390678928$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","$005e80a390678928$var$base64clean","src","dst","constructor","name","$e1ac3fad32a80a12$var$Hub","Hub","emitter","autoSubscribe","writeCue","isWriting","log","ports","num2type","port2num","A","B","C","D","AB","LED","TILT","num2port","entries","reduce","acc","port","num2action","num2color","ledColors","addListeners","parseMessage","setTimeout","startNotifications","clearTimeout","portInfoTimeout","subscribeAll","connected","logDebug","deviceType","deviceTypeNum","members","parseSensor","action","distance","floor","roll","pitch","angle","setDisconnected","noReconnect","motorTime","seconds","dutyCycle","callback","portNum","encodeMotorTime","motorTimeMulti","dutyCycleA","dutyCycleB","encodeMotorTimeMulti","motorAngle","encodeMotorAngle","motorAngleMulti","encodeMotorAngleMulti","rawCommand","raw","motorPowerCommand","power","encodeMotorPower","led","color","encodeLed","subscribe","option","unsubscribe","arr_1","secondArg","writeFromCue","el","shift","writeValue","catch","err","finally","colorNum","$e1ac3fad32a80a12$exports","$b31b52c6affb567a$var$CALLBACK_TIMEOUT_MS","$b31b52c6affb567a$exports","DEFAULT_CONFIG","METRIC_MODIFIER","TURN_MODIFIER","DRIVE_SPEED","TURN_SPEED","DEFAULT_STOP_DISTANCE","DEFAULT_CLEAR_DISTANCE","LEFT_MOTOR","RIGHT_MOTOR","VALID_MOTORS","$b31b52c6affb567a$var$validateConfiguration","configuration","leftMotor","rightMotor","distanceModifier","turnModifier","driveSpeed","turnSpeed","defaultStopDistance","defaultClearDistance","$b31b52c6affb567a$var$waitForValueToSet","valueName","compareFunc","timeoutMs","valueNameToCompare","bind","reject","$b31b52c6affb567a$var$__awaiter","$b31b52c6affb567a$var$__generator","$b31b52c6affb567a$var$HubAsync","_super","HubAsync","$b31b52c6affb567a$var$__extends","disconnectAsync","afterInitialization","hubDisconnected","portData","useMetric","modifier","rotation","ledAsync","motorTimeAsync","wait","_","motorTimeMultiAsync","motorAngleAsync","beforeTurn","motorAngleMultiAsync","useMetricUnits","useImperialUnits","setFrictionModifier","drive","abs","turn","degrees","turnMotorModifier","leftTurn","rightTurn","driveUntil","distanceCheck","direction","turnUntil","directionModifier","updateConfiguration","$8ef69142fdea9f8e$exports","manual","hubControl","control","speed","prevControl","turnAngle","motorA","motorB","hub","tilt","$cca1a6220a0ddff4$var$CHECK_TIME_MS","$cca1a6220a0ddff4$exports","seek","controlUpdateTime","Date","now","prevDevice","turnDirection","setNextState","$cca1a6220a0ddff4$var$DRIVE_SPEED","back","$cca1a6220a0ddff4$var$REVERSE_SPEED","stop","$bde4c866121a4293$var$HubControl","HubControl","deviceInfo","controlData","$bde4c866121a4293$var$__assign","states","Turn","Drive","Stop","Back","Manual","Seek","currentState","rssi","portObject","state","update","$bde4c866121a4293$exports","$4cc139ecd71f09f4$var$LegoBoost","LegoBoost","s","MAX_SAFE_INTEGER","input","forceState","updateInputMode","handleGattDisconnect","initHub","e_1","evt","$4cc139ecd71f09f4$var$__awaiter","updateTimer","setInterval","clearInterval","changeLed","driveToDirection","preCheck","ai","$2d5fd8fad3328a2a$var$ctx","boost","v","accelerometer","move","$2d5fd8fad3328a2a$var$initAcc","permissions","query","result","Accelerometer","document","getElementById","innerText","z","$2d5fd8fad3328a2a$var$start","$parcel$interopDefault","$4cc139ecd71f09f4$exports","info","onclick","alert"],"version":3,"file":"index.f871607a.js.map"}